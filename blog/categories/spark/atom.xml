<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Spark | Geting]]></title>
  <link href="http://geting.github.io/blog/categories/spark/atom.xml" rel="self"/>
  <link href="http://geting.github.io/"/>
  <updated>2016-01-29T15:45:48+08:00</updated>
  <id>http://geting.github.io/</id>
  <author>
    <name><![CDATA[Geting]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Connect Mysql With Spark]]></title>
    <link href="http://geting.github.io/blog/2016/01/29/connect-mysql-with-spark/"/>
    <updated>2016-01-29T15:12:15+08:00</updated>
    <id>http://geting.github.io/blog/2016/01/29/connect-mysql-with-spark</id>
    <content type="html"><![CDATA[<ol>
<li><p>设置SPARK_CLASSPATH,如：</p>

<pre><code class="` bash"> export SPARK_CLASSPATH=/home/ting/software/mysql-connector-java-5.1.38/mysql-connector-java-5.1.38-bin.jar
</code></pre></li>
<li><p>启动spark-shell</p>

<pre><code class="` bash"> sh ./bin/spark-shell
</code></pre></li>
<li><p>把Mysql 表转化为DataFrame对象</p>

<pre><code class="` scala"> val jdbcDF = sqlContext.load("jdbc", Map("url" -&gt; "jdbc:mysql://localhost:3306/your_database?user=your_user&amp;password=your_password", "dbtable" -&gt; "your_table"))
</code></pre></li>
<li><p>DataFrame的一些简单用法</p>

<p> ``` scala
 // 输出表结构
df.printSchema()</p></li>
</ol>


<p>// 选择所有年龄大于21岁的人，只保留name字段
df.filter(df(&ldquo;age&rdquo;) > 21).select(&ldquo;name&rdquo;).show()</p>

<p>// 选择name，并把age字段自增
df.select(&ldquo;name&rdquo;, df(&ldquo;age&rdquo;) + 1).show()</p>

<p>// 按年龄分组计数
df.groupBy(&ldquo;age&rdquo;).count().show()</p>

<p>// 左联表（注意是3个等号！）
df.join(df2, df(&ldquo;name&rdquo;) === df2(&ldquo;name&rdquo;), &ldquo;left&rdquo;).show()
    ```</p>
]]></content>
  </entry>
  
</feed>
